{
	"scope": "source.pub - string",

	"completions":
	[
		"pub",
		
		{ "trigger": "if", "contents": "if(${1:condition}) {${2}}" },
		{ "trigger": "else", "contents": "else {${1}}" },
		{ "trigger": "elif", "contents": "elif(${1}) {${2}}" },
		{ "trigger": "for", "contents": "for(${1}) {${2}}" },
		{ "trigger": "lambda", "contents": "lambda(${1}) {${2}}" },
		{ "trigger": "include", "contents": "include(${1})" },
		{ "trigger": "locals", "contents": "locals {${1}}" },
		{ "trigger": "globals", "contents": "globals {${1}}" },
		{ "trigger": "print", "contents": "print(${1})" },
		{ "trigger": "load", "contents": "load(${1})" },
		{ "trigger": "cload", "contents": "cload(*${1}*)" },
		{ "trigger": "def", "contents": "def ${1}" },
		
		{ "trigger": "rfn3", "contents": "rfn3(${1})" },
		{ "trigger": "append", "contents": "append(${1})" },
		{ "trigger": "bind", "contents": "bind(${1})" },
		{ "trigger": "bitwise_and", "contents": "bitwise_and(${1})" },
		{ "trigger": "bitwise_or", "contents": "bitwise_or(${1})" },
		{ "trigger": "ceil", "contents": "ceil(${1})" },
		{ "trigger": "cmp", "contents": "cmp(${1})" },
		{ "trigger": "contains", "contents": "contains(${1})" },
		{ "trigger": "copy", "contents": "copy(${1})" },
		{ "trigger": "days_from_now", "contents": "days_from_now(${1})" },
		{ "trigger": "decorate", "contents": "decorate(${1})" },
		{ "trigger": "default", "contents": "default(${1})" },
		{ "trigger": "dump_env", "contents": "dump_env(${1})" },
		{ "trigger": "enable_wss", "contents": "enable_wss(${1})" },
		{ "trigger": "enumerate", "contents": "enumerate(${1})" },
		{ "trigger": "exp", "contents": "exp(${1})" },
		{ "trigger": "floor", "contents": "floor(${1})" },
		{ "trigger": "fork", "contents": "fork(${1})" },
		{ "trigger": "format_float", "contents": "format_float(${1})" },
		{ "trigger": "format_int", "contents": "format_int(${1})" },
		{ "trigger": "hidden_escape", "contents": "hidden_escape(${1})" },
		{ "trigger": "html_escape", "contents": "html_escape(${1})" },
		{ "trigger": "import", "contents": "import(${1})" },
		{ "trigger": "int", "contents": "int(${1})" },
		{ "trigger": "internal_dump", "contents": "internal_dump(${1})" },
		{ "trigger": "isnull", "contents": "isnull(${1})" },
		{ "trigger": "items", "contents": "items(${1})" },
		{ "trigger": "join", "contents": "join(${1})" },
		{ "trigger": "json2pub", "contents": "json2pub(${1})" },
		{ "trigger": "json_escape", "contents": "json_escape(${1})" },
		{ "trigger": "keys", "contents": "keys(${1})" },
		{ "trigger": "len", "contents": "len(${1})" },
		{ "trigger": "list", "contents": "list(${1})" },
		{ "trigger": "log", "contents": "log(${1})" },
		{ "trigger": "logwarn", "contents": "logwarn(${1})" },
		{ "trigger": "lookup", "contents": "lookup(${1})" },
		{ "trigger": "map", "contents": "map(${1})" },
		{ "trigger": "match", "contents": "match(${1})" },
		{ "trigger": "now", "contents": "now(${1})" },
		{ "trigger": "okws_version_int", "contents": "okws_version_int(${1})" },
		{ "trigger": "okws_version_str", "contents": "okws_version_str(${1})" },
		{ "trigger": "pop_front", "contents": "pop_front(${1})" },
		{ "trigger": "pow", "contents": "pow(${1})" },
		{ "trigger": "rand", "contents": "rand(${1})" },
		{ "trigger": "randsel", "contents": "randsel(${1})" },
		{ "trigger": "range", "contents": "range(${1})" },
		{ "trigger": "replace", "contents": "replace(${1})" },
		{ "trigger": "reverse", "contents": "reverse(${1})" },
		{ "trigger": "round", "contents": "round(${1})" },
		{ "trigger": "search", "contents": "search(${1})" },
		{ "trigger": "sha1", "contents": "sha1(${1})" },
		{ "trigger": "shotgun", "contents": "shotgun(${1})" },
		{ "trigger": "shuffle", "contents": "shuffle(${1})" },
		{ "trigger": "sleep", "contents": "sleep(${1})" },
		{ "trigger": "sort", "contents": "sort(${1})" },
		{ "trigger": "splice", "contents": "splice(${1})" },
		{ "trigger": "split", "contents": "split(${1})" },
		{ "trigger": "sqrt", "contents": "sqrt(${1})" },
		{ "trigger": "str", "contents": "str(${1})" },
		{ "trigger": "strip", "contents": "strip(${1})" },
		{ "trigger": "strptime", "contents": "strptime(${1})" },
		{ "trigger": "substr", "contents": "substr(${1})" },
		{ "trigger": "tag_escape", "contents": "tag_escape(${1})" },
		{ "trigger": "time_format", "contents": "time_format(${1})" },
		{ "trigger": "time_from_now", "contents": "time_from_now(${1})" },
		{ "trigger": "tolower", "contents": "tolower(${1})" },
		{ "trigger": "toupper", "contents": "toupper(${1})" },
		{ "trigger": "type", "contents": "type(${1})" },
		{ "trigger": "unbind", "contents": "unbind(${1})" },
		{ "trigger": "url_escape", "contents": "url_escape(${1})" },
		{ "trigger": "url_unescape", "contents": "url_unescape(${1})" },
		{ "trigger": "utf8_fix", "contents": "utf8_fix(${1})" },
		{ "trigger": "values", "contents": "values(${1})" },
		{ "trigger": "version_int", "contents": "version_int(${1})" },
		{ "trigger": "version_str", "contents": "version_str(${1})" },
		{ "trigger": "warn", "contents": "warn(${1})" },
		{ "trigger": "warn_trace", "contents": "warn_trace(${1})" },
		{ "trigger": "wss_filter", "contents": "wss_filter(${1})" },
		{ "trigger": "bit_set", "contents": "bit_set(${1})" },
		{ "trigger": "br_to_newline", "contents": "br_to_newline(${1})" },
		{ "trigger": "commaify", "contents": "commaify(${1})" },
		{ "trigger": "get_exp_group", "contents": "get_exp_group(${1})" },
		{ "trigger": "json_uber_filter", "contents": "json_uber_filter(${1})" },
		{ "trigger": "json_uber_lite", "contents": "json_uber_lite(${1})" },
		{ "trigger": "money", "contents": "money(${1})" },
		{ "trigger": "newline_to_br", "contents": "newline_to_br(${1})" },
		{ "trigger": "pluralize", "contents": "pluralize(${1})" },
		{ "trigger": "regex_replace", "contents": "regex_replace(${1})" },
		{ "trigger": "remove_brackets_amp", "contents": "remove_brackets_amp(${1})" },
		{ "trigger": "sfs_hash", "contents": "sfs_hash(${1})" },
		{ "trigger": "strip_html", "contents": "strip_html(${1})" },
		{ "trigger": "strip_html_dutil", "contents": "strip_html_dutil(${1})" },
		{ "trigger": "strip_newline", "contents": "strip_newline(${1})" },
		{ "trigger": "tidy", "contents": "tidy(${1})" },
		{ "trigger": "unescape_html_entities", "contents": "unescape_html_entities(${1})" },
		{ "trigger": "utf8_fix", "contents": "utf8_fix(${1})" }
	]
}