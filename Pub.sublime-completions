{
	"scope": "source.pub - string",

	"completions":
	[
		"pub",
		
		// keywords
		
		{ "trigger": "break", "contents": "break" },
		{ "trigger": "case", "contents": "case" },
		{ "trigger": "cload", "contents": "cload(*${1}*)" },
		{ "trigger": "continue", "contents": "continue" },
		{ "trigger": "def", "contents": "def ${1:func}(${2}) {${3}}" },
		{ "trigger": "elif", "contents": "elif (${1}) {${2}}" },
		{ "trigger": "else", "contents": "else {${1}}" },
		{ "trigger": "empty", "contents": "empty {${1}}" },
		{ "trigger": "exit", "contents": "exit" },
		{ "trigger": "for", "contents": "for(${1}, ${2}) {${3}}" },
		{ "trigger": "globals", "contents": "globals {}" },
		{ "trigger": "if", "contents": "if (${1}) {${2}}" },
		{ "trigger": "include", "contents": "include(${1})" },
		{ "trigger": "lambda", "contents": "lambda(${1}) {${2}}" },
		{ "trigger": "load", "contents": "load(${1})" },
		{ "trigger": "locals", "contents": "locals {${1}}" },
		{ "trigger": "null", "contents": "null" },
		{ "trigger": "print", "contents": "print" },
		{ "trigger": "return", "contents": "return" },
		{ "trigger": "switch", "contents": "switch" },
		{ "trigger": "universals", "contents": "universals" },
		{ "trigger": "while", "contents": "while" },
		
		// rfn3

		{ "trigger": "append", "contents": "append(${1})" },
		{ "trigger": "bind", "contents": "bind(${1})" },
		{ "trigger": "bitwise_and", "contents": "bitwise_and(${1})" },
		{ "trigger": "bitwise_leftshift", "contents": "bitwise_leftshift(${1})" },
		{ "trigger": "bitwise_or", "contents": "bitwise_or(${1})" },
		{ "trigger": "bitwise_rightshift", "contents": "bitwise_rightshift(${1})" },
		{ "trigger": "bitwise_xor", "contents": "bitwise_xor(${1})" },
		{ "trigger": "breadcrumb", "contents": "breadcrumb(${1})" },
		{ "trigger": "ceil", "contents": "ceil(${1})" },
		{ "trigger": "cmp", "contents": "cmp(${1})" },
		{ "trigger": "cmp_float", "contents": "cmp_float(${1})" },
		{ "trigger": "contains", "contents": "contains(${1})" },
		{ "trigger": "copy", "contents": "copy(${1})" },
		{ "trigger": "days_from_now", "contents": "days_from_now(${1})" },
		{ "trigger": "decorate", "contents": "decorate(${1})" },
		{ "trigger": "default", "contents": "default(${1})" },
		{ "trigger": "documentation", "contents": "documentation(${1})" },
		{ "trigger": "dump_env", "contents": "dump_env(${1})" },
		{ "trigger": "enable_wss", "contents": "enable_wss(${1})" },
		{ "trigger": "enumerate", "contents": "enumerate(${1})" },
		{ "trigger": "eval_location", "contents": "eval_location(${1})" },
		{ "trigger": "exp", "contents": "exp(${1})" },
		{ "trigger": "floor", "contents": "floor(${1})" },
		{ "trigger": "fork", "contents": "fork(${1})" },
		{ "trigger": "format_float", "contents": "format_float(${1})" },
		{ "trigger": "format_int", "contents": "format_int(${1})" },
		{ "trigger": "hidden_escape", "contents": "hidden_escape(${1})" },
		{ "trigger": "html_escape", "contents": "html_escape(${1})" },
		{ "trigger": "import", "contents": "import(${1})" },
		{ "trigger": "index_of", "contents": "index_of(${1})" },
		{ "trigger": "int", "contents": "int(${1})" },
		{ "trigger": "internal_dump", "contents": "internal_dump(${1})" },
		{ "trigger": "isnull", "contents": "isnull(${1})" },
		{ "trigger": "items", "contents": "items(${1})" },
		{ "trigger": "join", "contents": "join(${1})" },
		{ "trigger": "json2pub", "contents": "json2pub(${1})" },
		{ "trigger": "json_escape", "contents": "json_escape(${1})" },
		{ "trigger": "keys", "contents": "keys(${1})" },
		{ "trigger": "len", "contents": "len(${1})" },
		{ "trigger": "list", "contents": "list(${1})" },
		{ "trigger": "localtime", "contents": "localtime(${1})" },
		{ "trigger": "log", "contents": "log(${1})" },
		{ "trigger": "logwarn", "contents": "logwarn(${1})" },
		{ "trigger": "lookup", "contents": "lookup(${1})" },
		{ "trigger": "map", "contents": "map(${1})" },
		{ "trigger": "match", "contents": "match(${1})" },
		{ "trigger": "now", "contents": "now(${1})" },
		{ "trigger": "okws_version_int", "contents": "okws_version_int(${1})" },
		{ "trigger": "okws_version_str", "contents": "okws_version_str(${1})" },
		{ "trigger": "pop_front", "contents": "pop_front(${1})" },
		{ "trigger": "pow", "contents": "pow(${1})" },
		{ "trigger": "rand", "contents": "rand(${1})" },
		{ "trigger": "randsel", "contents": "randsel(${1})" },
		{ "trigger": "range", "contents": "range(${1})" },
		{ "trigger": "raw", "contents": "raw(${1})" },
		{ "trigger": "remove", "contents": "remove(${1})" },
		{ "trigger": "replace", "contents": "replace(${1})" },
		{ "trigger": "reverse", "contents": "reverse(${1})" },
		{ "trigger": "round", "contents": "round(${1})" },
		{ "trigger": "search", "contents": "search(${1})" },
		{ "trigger": "sha1", "contents": "sha1(${1})" },
		{ "trigger": "shotgun", "contents": "shotgun(${1})" },
		{ "trigger": "shuffle", "contents": "shuffle(${1})" },
		{ "trigger": "sleep", "contents": "sleep(${1})" },
		{ "trigger": "sort", "contents": "sort(${1})" },
		{ "trigger": "sort2", "contents": "sort2(${1})" },
		{ "trigger": "splice", "contents": "splice(${1})" },
		{ "trigger": "split", "contents": "split(${1})" },
		{ "trigger": "split2", "contents": "split2(${1})" },
		{ "trigger": "sqrt", "contents": "sqrt(${1})" },
		{ "trigger": "stat_file", "contents": "stat_file(${1})" },
		{ "trigger": "str", "contents": "str(${1})" },
		{ "trigger": "strip", "contents": "strip(${1})" },
		{ "trigger": "strptime", "contents": "strptime(${1})" },
		{ "trigger": "substr", "contents": "substr(${1})" },
		{ "trigger": "tag_escape", "contents": "tag_escape(${1})" },
		{ "trigger": "time_format", "contents": "time_format(${1})" },
		{ "trigger": "time_from_now", "contents": "time_from_now(${1})" },
		{ "trigger": "tolower", "contents": "tolower(${1})" },
		{ "trigger": "toupper", "contents": "toupper(${1})" },
		{ "trigger": "type", "contents": "type(${1})" },
		{ "trigger": "uint", "contents": "uint(${1})" },
		{ "trigger": "unbind", "contents": "unbind(${1})" },
		{ "trigger": "url_escape", "contents": "url_escape(${1})" },
		{ "trigger": "url_unescape", "contents": "url_unescape(${1})" },
		{ "trigger": "utf8_fix", "contents": "utf8_fix(${1})" },
		{ "trigger": "values", "contents": "values(${1})" },
		{ "trigger": "version_int", "contents": "version_int(${1})" },
		{ "trigger": "version_str", "contents": "version_str(${1})" },
		{ "trigger": "warn", "contents": "warn(${1})" },
		{ "trigger": "warn_trace", "contents": "warn_trace(${1})" },
		{ "trigger": "wss_filter", "contents": "wss_filter(${1})" },
		
		// okclib
		
		{ "trigger": "aliasify", "contents": "aliasify(${1})" },
		{ "trigger": "bit_set", "contents": "bit_set(${1})" },
		{ "trigger": "br_to_newline", "contents": "br_to_newline(${1})" },
		{ "trigger": "cents_to_dollars", "contents": "cents_to_dollars(${1})" },
		{ "trigger": "commaify", "contents": "commaify(${1})" },
		{ "trigger": "debug", "contents": "debug(${1})" },
		{ "trigger": "float", "contents": "float(${1})" },
		{ "trigger": "get_distance", "contents": "get_distance(${1})" },
		{ "trigger": "get_exp_group", "contents": "get_exp_group(${1})" },
		{ "trigger": "gum_hex", "contents": "gum_hex(${1})" },
		{ "trigger": "hash_password", "contents": "hash_password(${1})" },
		{ "trigger": "hex", "contents": "hex(${1})" },
		{ "trigger": "is_cupid_ip", "contents": "is_cupid_ip(${1})" },
		{ "trigger": "is_staff", "contents": "is_staff(${1})" },
		{ "trigger": "jsmin", "contents": "jsmin(${1})" },
		{ "trigger": "json_uber_filter", "contents": "json_uber_filter(${1})" },
		{ "trigger": "json_uber_filter_lite", "contents": "json_uber_filter_lite(${1})" },
		{ "trigger": "json_uber_lite", "contents": "json_uber_lite(${1})" },
		{ "trigger": "money", "contents": "money(${1})" },
		{ "trigger": "name_to_id", "contents": "name_to_id(${1})" },
		{ "trigger": "newline_to_br", "contents": "newline_to_br(${1})" },
		{ "trigger": "pluralize", "contents": "pluralize(${1})" },
		{ "trigger": "regex_replace", "contents": "regex_replace(${1})" },
		{ "trigger": "regexp_replace", "contents": "regexp_replace(${1})" },
		{ "trigger": "remove_brackets_amp", "contents": "remove_brackets_amp(${1})" },
		{ "trigger": "sfs_hash", "contents": "sfs_hash(${1})" },
		{ "trigger": "strip_html", "contents": "strip_html(${1})" },
		{ "trigger": "strip_html_dutil", "contents": "strip_html_dutil(${1})" },
		{ "trigger": "strip_html_preserve_brs", "contents": "strip_html_preserve_brs(${1})" },
		{ "trigger": "strip_newline", "contents": "strip_newline(${1})" },
		{ "trigger": "tidy", "contents": "tidy(${1})" },
		{ "trigger": "unescape_html_entities", "contents": "unescape_html_entities(${1})" },
		{ "trigger": "utf8_fix", "contents": "utf8_fix(${1})" },
		
		// modlib
		
		{ "trigger": "armor64", "contents": "armor64(${1})" },
		{ "trigger": "auto_login_link", "contents": "auto_login_link(${1})" },
		{ "trigger": "check_authdata", "contents": "check_authdata(${1})" },
		{ "trigger": "config_object", "contents": "config_object(${1})" },
		{ "trigger": "dearmor64", "contents": "dearmor64(${1})" },
		{ "trigger": "email_notifications_types", "contents": "email_notifications_types(${1})" },
		{ "trigger": "filter_user_lazy", "contents": "filter_user_lazy(${1})" },
		{ "trigger": "filter_wiw", "contents": "filter_wiw(${1})" },
		{ "trigger": "filter_wiw_reciprocal", "contents": "filter_wiw_reciprocal(${1})" },
		{ "trigger": "generate_new_quivers", "contents": "generate_new_quivers(${1})" },
		{ "trigger": "get_first_contact_time", "contents": "get_first_contact_time(${1})" },
		{ "trigger": "get_gns_queue", "contents": "get_gns_queue(${1})" },
		{ "trigger": "get_gns_queues", "contents": "get_gns_queues(${1})" },
		{ "trigger": "get_ip_info", "contents": "get_ip_info(${1})" },
		{ "trigger": "get_match_filters", "contents": "get_match_filters(${1})" },
		{ "trigger": "get_match_percentages", "contents": "get_match_percentages(${1})" },
		{ "trigger": "get_quiver_excludes", "contents": "get_quiver_excludes(${1})" },
		{ "trigger": "get_quiver_filters", "contents": "get_quiver_filters(${1})" },
		{ "trigger": "get_quiver_matches", "contents": "get_quiver_matches(${1})" },
		{ "trigger": "get_uber", "contents": "get_uber(${1})" },
		{ "trigger": "get_ubers", "contents": "get_ubers(${1})" },
		{ "trigger": "get_user_rating", "contents": "get_user_rating(*${1}*)" },
		{ "trigger": "gns_inject_email", "contents": "gns_inject_email(${1})" },
		{ "trigger": "gns_lookup_emails_for_pair", "contents": "gns_lookup_emails_for_pair(${1})" },
		{ "trigger": "gns_lookup_emails_for_receiver", "contents": "gns_lookup_emails_for_receiver(${1})" },
		{ "trigger": "gns_lookup_emails_for_sender", "contents": "gns_lookup_emails_for_sender(${1})" },
		{ "trigger": "gns_reset", "contents": "gns_reset(${1})" },
		{ "trigger": "gum_get_ps", "contents": "gum_get_ps(${1})" },
		{ "trigger": "id_to_name", "contents": "id_to_name(${1})" },
		{ "trigger": "im_filter", "contents": "im_filter(${1})" },
		{ "trigger": "make_authdata", "contents": "make_authdata(${1})" },
		{ "trigger": "modify_uidal", "contents": "modify_uidal(${1})" },
		{ "trigger": "other_settings", "contents": "other_settings(${1})" },
		{ "trigger": "pubAndSend3", "contents": "pubAndSend3(${1})" },
		{ "trigger": "pubAndSend4", "contents": "pubAndSend4(${1})" },
		{ "trigger": "screenname_check", "contents": "screenname_check(${1})" },
		{ "trigger": "sookie_hash", "contents": "sookie_hash(${1})" },
		{ "trigger": "sookie_load", "contents": "sookie_load(${1})" },
		{ "trigger": "sookie_update", "contents": "sookie_update(${1})" },
		{ "trigger": "superfilter", "contents": "superfilter(${1})" },
		{ "trigger": "unsub_link", "contents": "unsub_link(${1})" },
		{ "trigger": "verify_password", "contents": "verify_password(${1})" },
		
		//sharedlib

		{ "trigger": "dsdc_get", "contents": "dsdc_get(${1})" },
		{ "trigger": "dsdc_put", "contents": "dsdc_put(${1})" },
		{ "trigger": "dsdl_acquire", "contents": "dsdl_acquire(${1})" },
		{ "trigger": "dsdl_release", "contents": "dsdl_release(${1})" },
		{ "trigger": "get_experiment_group", "contents": "get_experiment_group(${1})" },
		{ "trigger": "gm_time_format", "contents": "gm_time_format(${1})" },
		{ "trigger": "http_get", "contents": "http_get(${1})" },
		{ "trigger": "okwsmstime", "contents": "okwsmstime(${1})" },
		{ "trigger": "okwstsnow", "contents": "okwstsnow(${1})" },
		{ "trigger": "updateStats", "contents": "updateStats(${1})" },
		
		// okevents

		{ "trigger": "getBestEvents", "contents": "getBestEvents(*${1}*)" },
		{ "trigger": "getCashedTransactions", "contents": "getCashedTransactions(${1})" },
		{ "trigger": "getCashedTransactionsByEventid", "contents": "getCashedTransactionsByEventid(${1})" },
		{ "trigger": "getEventInfo", "contents": "getEventInfo(*${1}*)" },
		{ "trigger": "getEventJournalEntries", "contents": "getEventJournalEntries(${1})" },
		{ "trigger": "getEventsInfo", "contents": "getEventsInfo(*${1}*)" },
		{ "trigger": "getLastNJournalEntries", "contents": "getLastNJournalEntries(${1})" },
		{ "trigger": "getMembershipInfo", "contents": "getMembershipInfo(*${1}*)" },
		{ "trigger": "getStaleJournalEntries", "contents": "getStaleJournalEntries(${1})" },
		{ "trigger": "getUserEventids", "contents": "getUserEventids(*${1}*)" },
		
		// devicelib
		
		{ "trigger": "pub_and_send_push", "contents": "pub_and_send_push(*${1}*)" },
		
		// msglib
		
		{ "trigger": "is_mbox_full", "contents": "is_mbox_full(*${1}*)" },
		
		// uberlib
		
		{ "trigger": "armor64", "contents": "armor64(${1})" },
		{ "trigger": "put_uber_int_attribute", "contents": "put_uber_int_attribute(${1})" },
		{ "trigger": "put_uber_misc_bit", "contents": "put_uber_misc_bit(${1})" },
		{ "trigger": "put_uber_string_attribute", "contents": "put_uber_string_attribute(${1})" },
		
		// moneylib
		
		{ "trigger": "addCustomer", "contents": "addCustomer(*${1}*)" },
		{ "trigger": "captureTransaction", "contents": "captureTransaction(*${1}*)" },
		{ "trigger": "deleteCustomer", "contents": "deleteCustomer(*${1}*)" },
		{ "trigger": "getBillingInfo", "contents": "getBillingInfo(*${1}*)" },
		{ "trigger": "money_errors", "contents": "money_errors(${1})" },
		{ "trigger": "refundTransaction", "contents": "refundTransaction(*${1}*)" },
		{ "trigger": "runCustomerTransaction", "contents": "runCustomerTransaction(*${1}*)" },
		{ "trigger": "types", "contents": "types(${1})" },
		{ "trigger": "updateCustomer", "contents": "updateCustomer(*${1}*)" },
		{ "trigger": "usaepay_host", "contents": "usaepay_host(${1})" },
		{ "trigger": "voidTransaction", "contents": "voidTransaction(*${1}*)" },
		
		// okmail
		
		{ "trigger": "armor64", "contents": "armor64(${1})" }
		
	]
}